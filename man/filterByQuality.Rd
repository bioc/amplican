% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filters_helpers.R
\name{filterByQuality}
\alias{filterByQuality}
\title{This filter out sequences which have bad quality readings.}
\usage{
filterByQuality(forward.df, reverse.df, validRows, minimum = 0, average = 0)
}
\arguments{
\item{Forward.df:}{(Dataframe) Forward dataframe. This dataframes must have a
column named 'Quality' where the sequence should be.}

\item{Reverse.df:}{(Dataframe) Reverse dataframe. This dataframes must have a
column named 'Quality' where the sequence should be.}

\item{minimum:}{(Int)       This is the minimum quality that we accept for
every nucleotide. For example, if we have a sequence with nucleotides which have quality
50-50-50-50-10, and we set the minimum to 30, the whole sequence will be a bad sequence.
The minimum is set to 0 by default.}

\item{average:}{(Int)       This is what the average score of the quality of
sequence should be (or greater). For example, if we have a sequence with nucleotides which have
quality 70-70-70, the average would be 70. If set the average to 70 or less the sequence will
pass. If we set the average to 71 the sequence will not pass. The average is set to 0 by default.}

\item{validRows:}{(Bool[])    Array with bools telling which sequences do you
want to keep (usually all TRUE). Each one corresponde to a row in the dataframes in the
same order. If the value is TRUE it means that we keep it, if the filter pass. If the value is
false, it means that we discard it, regardless of the result of the filter.}
}
\value{
(Bool[]) Array with bools, with the non valid rows set to FALSE.
}
\description{
For each forward and reverse read, the function looks for sequence qualities
and decide if the quality is good enought to be taken into account. If not,
then is label as a bad sequence and won't be processed.
}

