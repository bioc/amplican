// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// bezierPath
NumericMatrix bezierPath(NumericVector x, NumericVector y, int detail);
RcppExport SEXP _amplican_bezierPath(SEXP xSEXP, SEXP ySEXP, SEXP detailSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type detail(detailSEXP);
    rcpp_result_gen = Rcpp::wrap(bezierPath(x, y, detail));
    return rcpp_result_gen;
END_RCPP
}
// getBeziers
List getBeziers(NumericVector x, NumericVector y, IntegerVector id, int detail);
RcppExport SEXP _amplican_getBeziers(SEXP xSEXP, SEXP ySEXP, SEXP idSEXP, SEXP detailSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type detail(detailSEXP);
    rcpp_result_gen = Rcpp::wrap(getBeziers(x, y, id, detail));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_amplican_bezierPath", (DL_FUNC) &_amplican_bezierPath, 3},
    {"_amplican_getBeziers", (DL_FUNC) &_amplican_getBeziers, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_amplican(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
